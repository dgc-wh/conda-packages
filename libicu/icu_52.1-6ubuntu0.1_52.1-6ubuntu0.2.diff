diff -Nru icu-52.1/debian/changelog icu-52.1/debian/changelog
--- icu-52.1/debian/changelog	2015-02-27 14:41:38.000000000 +0000
+++ icu-52.1/debian/changelog	2015-03-04 16:33:29.000000000 +0000
@@ -1,4 +1,4 @@
-icu (52.1-6ubuntu0.1) utopic-security; urgency=medium
+icu (52.1-6ubuntu0.2) utopic-security; urgency=medium
 
   * SECURITY UPDATE: information disclosure via incorrect font file parsing
     - debian/patches/CVE-2014-65xx.patch: add checks to
@@ -35,7 +35,7 @@
       source/test/intltest/regextst.cpp, source/test/intltest/regextst.h.
     - CVE-2014-9654
 
- -- Marc Deslauriers <marc.deslauriers@ubuntu.com>  Fri, 27 Feb 2015 09:28:08 -0500
+ -- Marc Deslauriers <marc.deslauriers@ubuntu.com>  Wed, 04 Mar 2015 11:33:14 -0500
 
 icu (52.1-6) unstable; urgency=medium
 
diff -Nru icu-52.1/debian/patches/CVE-2014-7940.patch icu-52.1/debian/patches/CVE-2014-7940.patch
--- icu-52.1/debian/patches/CVE-2014-7940.patch	2015-02-27 14:39:19.000000000 +0000
+++ icu-52.1/debian/patches/CVE-2014-7940.patch	2015-03-04 16:33:11.000000000 +0000
@@ -4,10 +4,14 @@
 Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=776265
 Bug-Google: https://code.google.com/p/chromium/issues/detail?id=433866
 
+Updated by Marc Deslauriers <marc.deslauriers@canonical.com> to also fix a
+regression when running the test suite because source->endp was being
+used without checking UCOL_ITER_HASLEN.
+
 Index: icu-52.1/source/i18n/ucol.cpp
 ===================================================================
---- icu-52.1.orig/source/i18n/ucol.cpp	2013-10-04 16:48:50.000000000 -0400
-+++ icu-52.1/source/i18n/ucol.cpp	2015-02-27 09:21:11.721894853 -0500
+--- icu-52.1.orig/source/i18n/ucol.cpp	2015-03-04 11:33:09.834892467 -0500
++++ icu-52.1/source/i18n/ucol.cpp	2015-03-04 11:33:09.834892467 -0500
 @@ -2259,6 +2259,9 @@
          if (data->pos + 1 == data->endp) {
              return *(data->pos ++);
@@ -18,13 +22,15 @@
      }
      else {
          if (innormbuf) {
-@@ -2820,8 +2823,14 @@
+@@ -2820,8 +2823,16 @@
                                      goBackOne(source);
                                  }
                              }
 -                        } else if (U16_IS_LEAD(schar)) {
 -                            miss = U16_GET_SUPPLEMENTARY(schar, getNextNormalizedChar(source));
-+                        } else if (U16_IS_LEAD(schar) && source->pos + 1 < source->endp) {
++                        } else if (U16_IS_LEAD(schar) &&
++                                   ((source->flags & UCOL_ITER_HASLEN) == 0 ||
++                                    source->pos + 1 < source->endp)) {
 +                            const UChar* prevPos = source->pos;
 +                            UChar nextChar = getNextNormalizedChar(source);
 +                            if (U16_IS_TRAIL(nextChar)) {
